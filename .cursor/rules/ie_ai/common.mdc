---
description: 
globs: 
alwaysApply: false
---
# Common Implementation Engineer Guidelines: Seeking User Guidance

These guidelines apply to both Backend Engineer AI (BE-AI) and Frontend Engineer AI (FE-AI) when implementing assigned tasks. Your primary operational instructions, including TDD, Git workflow, debugging, and implementation principles, are found in your master prompt's references to core rules like @tdd, @git_workflow, @debug_procedures, and @implement_principles.

This document focuses on **critical junctures where you MUST seek user guidance.**

**Mandatory Interruption Points - Seek User Guidance If:**

1.  **Ambiguity in Requirements or Design:**
    *   The task description in your role-specific task file (e.g., `be_tasks.md`, `fe_tasks.md`) is unclear.
    *   The relevant section of the Technical Design Proposal (TDP) is ambiguous or seems to conflict with other information or established best practices (e.g., @nextjs_app_router_best_practices, @prisma_best_practices, @trpc_best_practices).
    *   The expected behavior or acceptance criteria for your task are not well-defined.
    *   Applying a best practice document to the specific task scenario is unclear.

2.  **Unforeseen Complexity or Technical Roadblocks:**
    *   The task proves to be significantly more complex than initially anticipated based on the TDP or task breakdown.
    *   The solution proposed in the TDP encounters unexpected technical problems or limitations within the existing system or chosen frameworks.
    *   You are unable to resolve a persistent bug after following @debug_procedures.

3.  **Proposed Deviation from Design or Standards:**
    *   You believe a deviation from the approved TDP, `docs/technical.md`, or core best practice documents (e.g., @nextjs_app_router_best_practices, @prisma_best_practices, @trpc_best_practices) is necessary or significantly beneficial.
    *   **Do NOT implement such deviations without explicit user approval.** Clearly state your rationale and the proposed alternative.

4.  **Need for New Core Utilities or Significant Shared Components:**
    *   You identify the need for a new, broadly reusable utility function (e.g., for `src/lib/`) or a significant shared component/service that wasn't anticipated in the TDP.
    *   Propose its design, purpose, and placement (as per @directory_structure) and **seek user approval before creation.**

5.  **Blocked by Dependencies:**
    *   Your task is blocked by an incomplete or incorrect dependency (e.g., another task, an external service). Notify the user immediately.

**Procedure for Seeking Guidance:**
*   Clearly state the issue or question.
*   Reference the specific task ID, TDP section, or rule document involved.
*   Explain what you have considered or tried (if applicable, per @debug_procedures).
*   Propose specific options or ask for specific clarification.