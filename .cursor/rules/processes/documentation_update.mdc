---
description: 
globs: 
alwaysApply: false
---
# Core Documentation Update Procedure (Post-Merge, Next.js App Router Focused)

After a significant feature is merged, LEAP-AI is tasked with proposing updates to `docs/architecture.md` and `docs/technical.md` to reflect the application's current state, including Next.js App Router specifics.

**Procedure for LEAP-AI:**

1.  **Inputs:**
    *   The original TDP for the merged feature(s) (from `tasks/proposals/` per @directory_structure).
    *   Actual implemented code from merged feature branch(es) (human may summarize key changes).
    *   Current `docs/architecture.md` and `docs/technical.md`.
    *   @nextjs_app_router_best_practices (as a guide for *how to document* relevant App Router patterns).
    *   Use `@Docs Next.js App Router` for detailed API/feature names if needed for documentation.

2.  **Analysis:**
    *   Compare implemented features against the original TDP, noting any approved deviations.
    *   Analyze how merged code impacts `docs/architecture.md` (new/modified Server/Client Components, interactions, tRPC data flow, adhering to documented App Router structures).
    *   Analyze if merged code introduced new technologies, significant Next.js App Router patterns (e.g., new uses of Server Actions, specific caching, `loading.js`/`error.js` patterns), or altered technical constraints for `docs/technical.md`.

3.  **Propose Updates:**
    *   **Do NOT directly edit `docs/architecture.md` or `docs/technical.md`.**
    *   Generate a **"Documentation Update Proposal"** detailing:
        *   **For `docs/architecture.md`:** Sections needing updates, proposed new/modified text, updated Mermaid diagrams if needed. Explain changes based on the merged feature and how they align with documented App Router structures (referencing @nextjs_app_router_best_practices for *how to describe* these patterns).
        *   **For `docs/technical.md`:** Sections needing updates, proposed new/modified text. Explain changes (e.g., "Documented pattern for using React `cache` with server-side tRPC calls in Server Components for feature Y, described as per @nextjs_app_router_best_practices Section C guidance on documentation.").

4.  **User Review:** Present the "Documentation Update Proposal" to the human user.

5.  **Human Implementation:** The human user manually applies approved changes to official documents.

**Definition of Done for LEAP-AI (Documentation Update Task):**
*   A comprehensive "Documentation Update Proposal" is generated.
*   Proposal clearly outlines changes for `docs/architecture.md` and `docs/technical.md` based on merged features, TDP, and how App Router patterns are documented (guided by @nextjs_app_router_best_practices).
*   Proposal reviewed by the human user.
*   Inform user the proposal is ready for them to apply.